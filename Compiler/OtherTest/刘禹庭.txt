
const int stop = 2, stopp = +3, stoppp = -4;
const char a = 'a', b = 'b', c = 'c', d = 'd';
int fib, fibs[4], fibbb, fibbbs[14];
int numbers[5], aaas, aaac[18];
char char_tt[30], char_s;

void test_if(){
    int left,right,array[3];
    int i;
    printf("test_if::::::::::::::::::::::::::::::::::::::::::::");
    for(i = 0; i<3; i=i+1){
        array[i]=i;
    }
    left = -1;
    if(left<array[0]){
        left = i+1;
        printf("test_if", 1+left);
        printf("test_if", left+i);
    }
    if(left<=array[1]){
        left = i+1;
        printf("test_if", 1+left);
        printf("test_if", left+i);
    }
    {
        if(left==array[2]){
            left = i+1;
            printf("test_if", 1+left);
            printf("test_if", left+i);
        }
        if(left!=array[2]){
            left = i+1;
            printf(1+left);
            printf(left+i);
        }
    }
    {
        {
            if(left>=array[1]){
                left = i+1;
                printf(1+left);
                printf(left+i);
            }
            if(left>array[0]){
                left = i+1;
                printf(1+left);
                printf(left+i);
            }
        }
    }
}

int blank(){
    const int stop = 2, stopp = +3, stoppp = -4;
    const char a = 'a', b = 'b', c = 'c', d = 'd';
    int fib, fibs[4], fibbb, fibbbs[14];
    int numbers[5], aaas, aaac[18];
    char char_tt[30], char_s;
    {
        {
            {
                {
                    {
                        {
                            {
                                ;
                            }
                        }
                    }
                }
            }
        }
    }
    {
        return (3);
    }
}

void test_expression(){
    int a,b,c,d[10],e,ef[10],rf,g,h,i,j,k,l,m,n,aaa[10];
    ef[3] = -3;
    c = -19;
    d[5] = 33;
    rf = -100;
    aaa[6] = 3;
    aaa[4] = -1300;
    a = +blank()*12 + 30*20 -7/4 +50;
    printf(a);
    printf(" ");
    a = -c + (a*c*d[5]) + ef[3] * 'c'-(aaa[6]/7) + (3+rf);
    printf(a);
    printf(" ");
    a = -c + (((((a*c*d[5])))) + ef[3] / 'c'-(aaa[6]*7));
    printf(a);
    printf(" ");
    e = (-c + (((((a*c*d[5])))) + ef[3] / 'c'-(aaa[6]*7)));
    printf(e);
    printf(" ");
    ef[4] = (-((-((+(+(-(-(-(+((((c+d[5]))))))))))))));
    printf(ef[4]);
    printf(" ");
    aaa[3]=((((((3))))));
    printf(aaa[3]);
    printf(" ");
    aaa[3]=((((((e))))));
    printf(aaa[3]);
    printf(" ");
    aaa[3]=((((((-e))))));
    printf(aaa[3]);
    printf(" ");
    aaa[3]=((((((aaa[4]))))));
    printf(aaa[3]);
    printf(" ");
    d[9] = 3;
    printf(d[9]);
    printf(" ");
    aaa[4] = 3 * (c + c);
    printf(aaa[4]);
    printf(" ");
    aaa[9] = d[5]*15;
    printf(aaa[9]);
    printf(" ");
    aaa[3] = 1++1;
    printf(aaa[3]);
    printf(" ");
    aaa[3] = 1+-1;
    printf(aaa[3]);
    printf(" ");

}

int Fib(int x){

    if (x == stop)
        return (stop - 1);
    else if (x == 1)
        return (1);
    else
        return (Fib(x - 1) + Fib(x - 2));
}

char returnA(int a, char b){
    return ('A');
}

void print(char c)
{
    printf(returnA(3+2, '-'));
    printf('+');
    return;
}

void swap(int i)
{
    int temp;
    temp = numbers[i];
    numbers[i] = numbers[i + 1];
    numbers[i + 1] = temp;
}

void printAlphabet(int stop)
{
    int i, aa;
    printf("Alphabet:");
    i = 0;
    do
        for (aa = i; aa == i; i = i + 1)
            print('A');
    while (i < 26)
}
void main()
{
    
    const int start = 3;
    int i, n;
    int j, temp1;
    char_s = 's';
    char_tt[3] = 't';

    test_if();
    test_expression();

    printf(char_s);
    printf(char_tt[3]);


    scanf(n);
    if (n == 1)
        for (i = 0; i < 12; i = i + 2)
            do
                fib = Fib(start + i);
            while (0)
    printf("Fib:", fib);

    printAlphabet(stop);

    numbers[0] = 10;
printf(numbers[0]);
    numbers[1] = 34;
printf(numbers[1]);
    numbers[2] = 5;
printf(numbers[2]);
    numbers[3] = 77;
printf(numbers[3]);
    numbers[4] = 1;
printf(numbers[4]);
printf("            ");
    for (j = 0; j < 5 * 1; j = j + 1)
        for (i = 0; i < 4; i = i + 1)
            if (numbers[i] > numbers[i + 1])
                swap(i);
    for (j = 0; j < 5; j = j + 1)
        printf(numbers[j]);
    temp1 = start * 3 / fib + stop * 5 - i;
    printf(temp1);
    do
    {
        i = i + 1;
        if (i <= 10)
            printf("ccc");
        else if (i <= 20)
            printf("ddd");
    else 
        printf("eee");
    } while (i <= 30)
}