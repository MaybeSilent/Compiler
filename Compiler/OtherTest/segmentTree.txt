int maxval[233],minval[233],sum[233];
int data[233];
int n;

int min(int a,int b) {
    if(a<b) return (a);
    return (b);
}

int max(int a,int b) {
    if(a>b) return (a);
    return (b);
}

int query(int l,int r,int type,int pos,int ll,int rr) {
    int flg,ans1,ans2;
    
    if(ll >= l) if(rr <= r) {
        if(type == 0) return(maxval[pos]);
        if(type == 1) return(minval[pos]);
        if(type == 2) return(sum[pos]);
        return(0);
    }
    flg=0;
    if(ll > r) flg=1;
    if(rr < l) flg=1;
    if(flg) {
        if(type == 0) return (-2147483647);
        else {
            if(type == 1) return (2147483647);
            else {
                if(type == 2) return(0);
            }
        }
        return (0);
    }

    if(type == 0) return (max(query(l,r,type,pos*2,ll,(ll+rr)/2),query(l,r,type,pos*2+1,(ll+rr)/2+1,rr)));
        else {
            if(type == 1) return (min(query(l,r,type,pos*2,ll,(ll+rr)/2),query(l,r,type,pos*2+1,(ll+rr)/2+1,rr)));
            else {
                if(type == 2) return (query(l,r,type,pos*2,ll,(ll+rr)/2)+query(l,r,type,pos*2+1,(ll+rr)/2+1,rr));
            }
        }
    return(0);
}


void build(int l,int r,int pos) {
    
    if(l==r) {
        maxval[pos] = data[l];
        minval[pos] = data[l];
        sum[pos]=data[l];
        return;
    }
    
    build(l,(l+r)/2,pos*2);
    build((l+r)/2+1,r,pos*2+1); 
    
    maxval[pos] = max(maxval[pos*2],maxval[pos*2+1]);
    minval[pos] = min(minval[pos*2],minval[pos*2+1]);
    sum[pos] = sum[pos*2] + sum[pos*2+1];
}

void main(){
    int i , flg , x;
    int l,r, type;
    printf("Well, let's run another segment tree test to verify its correctness.");
    printf("Please input the length of the sequence:");
    scanf(n);
    
    i = 1;
    do{
        printf("Please input the ", i);
        printf("-th number: ");
        scanf(x);
        data[i]=x;
        i = i + 1;
    }while(i<=n)
    
    printf("The numbers you just inputed are:");
    i = 1;
    do{
        printf("The ", i);
        printf("-th: ",data[i]);
        i = i+  1;
    }while(i<=n)

    
    printf("Building segment tree...");
    build(1,n,1);
    printf("The tree is succesfully built! Now it can respond to your query requests.");
    flg=1;
    i = 0;
    do{
        printf("Please input 3 numbers, l, r, and type, type=-1 means exit:");
        scanf(l,r,type);
        if(type<0) flg=0;
        if(type>=3) flg=0;
        if(flg) {
            printf("Your query result is ",query(l,r,type,1,1,n));
        }
        i = i +1;
    }while(flg)
}