const char const_char_a = 'a', const_char_b = 'b', const_char_c = 'c', const_char_A = 'A';
const int const_int_postive = 1, const_int_zero = +0, const_int_negtive = -1;
const char const_char_num = '9', const_char_underline = '_',const_char_add = '+', const_char_mul = '*';

int int_global_var;
char char_global_var;
int sort[10];

int returnInt()
{
    return (10);
}

char returnChar()
{
    return ('r');
}

int returnIntParameter(int select, int int_parameter_1, int int_parameter_2, int int_parameter_3, int int_parameter_4)
{
    int _tmp;
    if(select == 1) return (int_parameter_1);
    if(select == 2) return (int_parameter_2);
    if(select == 3) return (int_parameter_3);
    if(select == 4) return (int_parameter_4);
    else _tmp = 0;
    return (_tmp);
}


char returnCharParameter(int select, char char_parameter_1,  char char_parameter_2, char char_parameter_3, char char_parameter_4)
{
    if(select == 1) return (char_parameter_1);
    if(select == 2) return (char_parameter_2);
    if(select == 3) return (char_parameter_3);
    if(select == 4) return (char_parameter_4);
    else return ('0');
}

void testAssign()
{
    const int test_assign_10 = +10;
    int int_test_assign, int_array_test_assign[3];
    char char_test_assign, char_array_test_assign[3];

    int_test_assign = ++10 + returnIntParameter(2, --1, -+2, +test_assign_10, (returnChar() - const_char_a)) * ('c' - const_char_a) / 2;
    int_array_test_assign[int_test_assign / 4 + const_char_a - 'a' - 2] = --2;
    int_array_test_assign[+-2 + int_test_assign / int_array_test_assign[0] + returnInt() - 11] = -returnInt() + (test_assign_10 * (returnChar() - const_char_a) + returnIntParameter(4, -'b' + 'c', returnInt(), test_assign_10, ('a')));
    int_array_test_assign[-+255 + int_array_test_assign[1] + 'b' * 2 - 196] = -'b' + 'c';
    
    char_test_assign = returnChar();
    char_array_test_assign[0] = returnCharParameter(4, 'a', returnChar(),  returnChar(), const_char_a);
    char_array_test_assign[1] = char_array_test_assign[0];
    char_array_test_assign[2] = 'x';
    
    printf(int_test_assign);
    printf(int_array_test_assign[0]);
    printf(int_array_test_assign[1]);
    printf(int_array_test_assign[2]);
    printf(char_test_assign);
    printf(char_array_test_assign[0]);
    printf(char_array_test_assign[1]);
    printf(char_array_test_assign[2]);

    int_global_var = -3;
    char_global_var = 'c';
    printf(int_global_var);
    printf(char_global_var);
}

void testInputOutput()
{
    int int_test_input;
    char char_test_input;
    int int_global_var;
    char char_global_var;
    scanf(int_test_input, char_test_input);
    printf(" !#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~");
    printf("int_test_input = ", int_test_input);
    printf("char_test_input = ",char_test_input);
    int_global_var = -4;
    char_global_var = 'd';
}

void testTrick()
{
    {;{};}
    {{{}}}
    ;;;;;;
}

void main()
{
    int_global_var = 0;
    char_global_var = '_';
    testAssign();
    testInputOutput();
    printf(int_global_var);
    printf(char_global_var);
    testTrick();
}