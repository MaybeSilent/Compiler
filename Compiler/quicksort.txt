int a[15], i;

int judge1(int a, int b, int c, int d)
{
    int ret;
    ret = 0;
    if(a < b)
        if(c >= d)
            ret = 1;
    return (ret);
}

int judge2(int a, int b, int c, int d)
{
    int ret;
    ret = 0;
    if(a < b)
        if(c <= d)
            ret = 1;
    return (ret);
}

void Qsort(int low, int high)
{
    int first, last, key;
    first = low;
    last = high;
    key = a[first];
    if(low >= high)
        return;
    
    if(first < last)
    {   
        do{ 
            last = last + 1;
            do{
                last = last - 1;
            }while(judge1(first, last, a[last], key) == 1)
                
     
            a[first] = a[last];
            
            first = first - 1;
            do{
                first = first + 1;
            } while(judge2(first, last, a[first], key) == 1)
                
             
            a[last] = a[first];

        } while(first < last)   
    }
    a[first] = key;
    Qsort(low, first-1);
    Qsort(first+1, high);
    return;
}

void main()
{  
    a[0] = 5;
    a[1] = 8;
    a[2] = 3;
    a[3] = 6;
    a[4] = 4;
    a[5] = 1;
    a[6] = 2;
    a[7] = 15;
    a[8] = 10;
    a[9] = 9;
    a[10] = 13;
    a[11] = 11;
    a[12] = 7;
    a[13] = 12;
    a[14] = 14;
	
    for(i = 0 ; i < 15 ; i = i + 1)
    {
        printf(a[i]);
    }
    printf("\n");
    Qsort(0,14);
    
    for(i = 0 ; i < 15 ; i = i + 1)
    {
        printf(a[i]);
    }
    return;
}